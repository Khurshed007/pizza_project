{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://28.02.24/./src/constants.js","webpack://28.02.24/./src/marker.js","webpack://28.02.24/./src/modallwindow.js","webpack://28.02.24/./src/toggleUniqueElement.js","webpack://28.02.24/./src/app.js","webpack://28.02.24/./src/active.js"],"sourcesContent":["const options = document.querySelectorAll(\".list ul li\");\r\nconst showPizza = document.querySelectorAll(\".pizza_slice\");\r\nconst orderShow = document.querySelector(\".up_left_side_content ul\");\r\nconst priceShow = document.querySelector(\".up_left_side_content .price_item\");\r\nconst btn = document.querySelector(\".btn.limit\");\r\nconst pizzaSlice = document.querySelectorAll(\".pizza_slice\");\r\nconst modallContent = document.querySelector(\".modall_content\")\r\nconst modallContainer = document.getElementById(\"modall_container\")\r\nconst modallButton = document.querySelector(\".modall_btn\");\r\n\r\nexport {options, showPizza, orderShow, priceShow, btn, pizzaSlice,modallContent,modallButton,modallContainer}\r\n","import { priceShow} from './constants.js'\r\n\r\nfunction addMarker(value, isPositive) {\r\n    const newItem = document.createElement(\"sup\");\r\n    newItem.classList.add(\"marker\"); // Добавляем класс для анимации\r\n    if (isPositive) {\r\n      newItem.textContent = `+${value}`;\r\n    } else {\r\n      newItem.textContent = `-${value}`;\r\n      newItem.classList.add(\"minus\");\r\n    }\r\n    priceShow.appendChild(newItem); // должен стоять до getComputedStyle(newItem).opacity  и newItem.classList.add(\"show\");\r\n    getComputedStyle(newItem).opacity; // Здесь нам не нужно значение, просто вызываем метод для триггера анимации\r\n  \r\n    // Запускаем анимацию\r\n    newItem.classList.add(\"show\");\r\n    setTimeout(() => {\r\n      newItem.classList.add(\"hidden\"); // Скрываем наш элемент через опр. время\r\n    }, 450);\r\n  }\r\n function addpositiveMarker(e) {\r\n    const currentElPrice = e.dataset.price;\r\n    addMarker(currentElPrice, true);\r\n  }\r\n  \r\nfunction addnegativeMarker(e) {\r\n    const currentElPrice = e.dataset.price;\r\n    addMarker(currentElPrice, false);\r\n  }\r\n\r\n  export {\r\n    addpositiveMarker,\r\n    addnegativeMarker\r\n  }","import {modallContent, modallButton, modallContainer} from \"./constants.js\"\r\n\r\nfunction modallWindow(pizzaAmount, currentMassive) {\r\n    const areAllPizzaBought = pizzaAmount.length === currentMassive.length;\r\n    if (areAllPizzaBought) {\r\n    //   location.reload();\r\n    //   alert(\"asdas\");\r\n    window.scrollTo({\r\n        top: 0,\r\n        behavior: 'smooth',\r\n      });\r\n      \r\n    modallContent.classList.add(\"active\")\r\n    modallContainer.classList.add(\"active\")\r\n    }\r\n  }\r\n\r\n\r\n  modallButton.addEventListener(\"click\", ()=> {\r\n    location.reload();\r\n  })\r\n\r\n  export default modallWindow","\r\nimport { priceShow, orderShow, btn,showPizza, options, pizzaSlice } from './constants.js'\r\nimport {addpositiveMarker,addnegativeMarker} from \"./marker.js\"\r\n import modallWindow from './modallwindow.js';\r\n\r\n\r\nlet handleClick = () => {\r\n  let priceCounter = 0;\r\n  let pizzaCounter = 0;\r\n  const UniqueMenuList = [];\r\n  btn.disabled = true;\r\n  \r\n  btn.addEventListener(\"click\", () => modallWindow(pizzaSlice, UniqueMenuList));\r\n  return function (e) {\r\n    let currentElement = e.currentTarget;\r\n    if (currentElement.classList.contains(\"active\")) {\r\n      // Проверяем, существует ли уже элемент с таким же текстом и классом внутри orderShow\r\n\r\n      let isDuplicate = Array.from(orderShow.querySelectorAll(\"li\")).some(\r\n        (existingLi) =>\r\n          existingLi.textContent.trim() === currentElement.textContent.trim()\r\n      );\r\n      if (!isDuplicate) {\r\n        // нужен для того чтобы один и тот же элемент дважды не добавлялся\r\n\r\n        orderShow.append(currentElement.cloneNode(true));\r\n        priceCounter += +currentElement.dataset.price;\r\n        priceShow.innerHTML = priceCounter + \" $ \";\r\n        addpositiveMarker(currentElement);\r\n        \r\n        if (!UniqueMenuList.includes(currentElement.dataset.menu)) {\r\n            showPizza[pizzaCounter].classList.add(\"active\");\r\n            showPizza[pizzaCounter].setAttribute(\r\n              \"data-menu\",\r\n              currentElement.dataset.menu\r\n            );\r\n            UniqueMenuList.push(currentElement.dataset.menu);\r\n          \r\n            pizzaCounter++;\r\n          }\r\n\r\n      }\r\n\r\n  \r\n      if (currentElement.classList.contains(\"active\")) {\r\n\r\n        if (UniqueMenuList.length === showPizza.length) {\r\n          btn.disabled = false\r\n          btn.classList.add(\"active\")\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n\r\n    Array.from(orderShow.querySelectorAll(\"li\")).forEach((item) => {\r\n      item.addEventListener(\"click\", (e) => {\r\n        let currentElement = e.currentTarget;\r\n        let menuAttribute = currentElement.dataset.menu; // Получаем значение атрибута меню текущего элемента\r\n        let UniqueMenuIndex = UniqueMenuList.indexOf(menuAttribute);\r\n        \r\n        Array.from(options).forEach((li) => {\r\n          if (currentElement.textContent === li.textContent) {\r\n            currentElement.remove();\r\n            priceCounter -= Number(currentElement.dataset.price);\r\n            priceShow.innerHTML = priceCounter +  \" $ \";\r\n            li.classList.remove(\"active\");\r\n           \r\n            addnegativeMarker(currentElement);\r\n          }\r\n        });\r\n        // let isDiscovered = false\r\n        let isDiscovered = Array.from(orderShow.querySelectorAll(\"li\")).some((li) => {\r\n                   return currentElement.dataset.menu === li.dataset.menu\r\n                       \r\n        })\r\n         \r\n       \r\n        \r\n        if (\r\n          UniqueMenuIndex !== -1 && !isDiscovered &&\r\n          UniqueMenuList.includes(currentElement.dataset.menu)\r\n        ) {\r\n          // Удаляем элемент из массива по его индексу\r\n          UniqueMenuList.splice(UniqueMenuIndex, 1);\r\n   \r\n          showPizza[--pizzaCounter].classList.remove(\"active\");\r\n          btn.disabled = true\r\n          btn.classList.remove(\"active\")\r\n        }\r\n\r\n     \r\n\r\n\r\n        e.stopImmediatePropagation();\r\n      });\r\n    });\r\n  };\r\n};\r\n\r\nlet toggleUniqueElemnet = handleClick()\r\nexport default toggleUniqueElemnet","import {options, showPizza, orderShow, priceShow, btn, pizzaSlice} from \"./constants.js\"; // Наши константы элементов  \r\nimport activeFunction from \"./active.js\" \r\n// import style.css from \"./\"\r\n\r\nconsole.log(options)\r\n\r\n\r\noptions.forEach((items) => {\r\n    items.addEventListener(\"click\", (e) => activeFunction(e));\r\n  });\r\n","\r\nimport toggleUniqueElemnet from \"./toggleUniqueElement\";\r\n\r\nlet activeFunction = (e) => {\r\n    // Получаем все li внутри текущего ul\r\n    let currentElement = e.currentTarget;\r\n    // Получаем количество активных li внутри текущего ul\r\n    const IngredientsActiveList = [];\r\n    const BasicAndSauceActiveList = [];\r\n    const currentLi = currentElement.parentNode.querySelectorAll('li');\r\n\r\n    Array.from(currentLi).forEach((element) => {\r\n        const noBasisActiv = (!element.classList.contains('basis') && element.classList.contains('active'));\r\n        const noSauceActive = (!element.classList.contains('sauce') && element.classList.contains('active'));\r\n        const SauceActive = (element.classList.contains('sauce') && element.classList.contains('active'));\r\n        const BasisActive = (element.classList.contains('basis') && element.classList.contains('active'));\r\n        if (noBasisActiv && noSauceActive) {\r\n            IngredientsActiveList.push(element.classList.value);\r\n        }\r\n        if (SauceActive || BasisActive) {\r\n            BasicAndSauceActiveList.push(element.classList.value);\r\n        }\r\n    })\r\n    if (IngredientsActiveList.length === 2 || BasicAndSauceActiveList.length === 1) {\r\n        return\r\n    }\r\n    // Если уже есть два элемента с классом \"active\" в текущем ul, то просто выходим из функции\r\n    if (BasicAndSauceActiveList.length === 1 || IngredientsActiveList.length === 2) {\r\n        return;\r\n    }\r\n    currentElement.classList.add(\"active\");\r\n\r\n    toggleUniqueElemnet(e)\r\n};\r\n\r\nexport default activeFunction\r\n"],"names":["options","document","querySelectorAll","showPizza","orderShow","querySelector","priceShow","btn","pizzaSlice","modallContent","modallContainer","getElementById","addMarker","value","isPositive","newItem","createElement","classList","add","textContent","appendChild","getComputedStyle","opacity","setTimeout","addEventListener","location","reload","priceCounter","pizzaCounter","UniqueMenuList","disabled","currentMassive","length","window","scrollTo","top","behavior","e","currentElement","currentTarget","contains","Array","from","some","existingLi","trim","append","cloneNode","dataset","price","innerHTML","addpositiveMarker","includes","menu","setAttribute","push","forEach","item","menuAttribute","UniqueMenuIndex","indexOf","li","remove","Number","addnegativeMarker","isDiscovered","splice","stopImmediatePropagation","handleClick","console","log","items","IngredientsActiveList","BasicAndSauceActiveList","currentLi","parentNode","element","noBasisActiv","noSauceActive","SauceActive","BasisActive","active"],"sourceRoot":""}